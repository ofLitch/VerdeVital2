/**
 * @file temperature_sender.cpp
 * @brief Nodo emisor de temperatura usando ESP32 y sensor DHT11.
 *
 * @details Este nodo se conecta a una red WiFi, lee la temperatura desde un sensor DHT11 
 * y env√≠a los datos empaquetados (ID + float) al nodo receptor v√≠a UDP.
 * El ID del sensor es 2, y el valor enviado es la temperatura en grados Celsius.
 *
 * @version 1.0
 * @date 2025-05-06
 */

#include <WiFi.h>
#include <WiFiUdp.h>
#include <DHT.h>

// === Configuraci√≥n de red WiFi ===
const char* ssid = "Pomona Altos";
const char* password = "altosdepomona2525AP";

// === Configuraci√≥n del receptor UDP ===
const char* udpAddress = "192.168.1.11"; // Direcci√≥n IP del receptor
const int udpPort = 4210;                // Puerto UDP del receptor

// === Configuraci√≥n del sensor DHT ===
#define DHTPIN 4         // Pin conectado al sensor DHT
#define DHTTYPE DHT11    // Tipo de sensor DHT
DHT dht(DHTPIN, DHTTYPE);

// === Estructura para env√≠o de datos ===
struct SensorData {
  uint8_t id;     ///< ID del sensor (2 = temperatura)
  float data;     ///< Valor de temperatura
};

WiFiUDP udp;

/**
  * @brief Conecta el ESP32 a la red WiFi.
  */
void connectToWiFi() {
  WiFi.begin(ssid, password);
  Serial.print("Conectando a WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\n‚úÖ Conectado a WiFi");
}

/**
  * @brief Lee la temperatura desde el sensor DHT11.
  * @return float Temperatura en grados Celsius, o NAN si falla.
  */
float readTemperature() {
  return dht.readTemperature();
}

/**
  * @brief Env√≠a los datos del sensor al receptor v√≠a UDP.
  * @param id ID del sensor (2 = temperatura)
  * @param value Valor de la temperatura a enviar
  */
void sendSensorData(uint8_t id, float value) {
  SensorData payload;
  payload.id = id;
  payload.data = value;

  udp.beginPacket(udpAddress, udpPort);
  udp.write((uint8_t*)&payload, sizeof(SensorData));
  udp.endPacket();

  Serial.print("üì§ Enviado -> ID: ");
  Serial.print(payload.id);
  Serial.print(" | Temperatura: ");
  Serial.print(payload.data);
  Serial.println(" ¬∞C");
}

void setup() {
  Serial.begin(115200);
  dht.begin();
  connectToWiFi();
}

void loop() {
  float temperature = readTemperature();

  if (isnan(temperature)) {
    Serial.println("‚ùå Error al leer la temperatura");
    delay(2000);
    return;
  }

  sendSensorData(2, temperature);
  delay(2000);
}
